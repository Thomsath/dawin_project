<?php

namespace SmartCartBundle\Repository;

/**
* CartRepository
*
* This class was generated by the Doctrine ORM. Add your own custom
* repository methods below.
*/
class CartRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllOrderByRating($limit) {
        return $this->createQueryBuilder('c')
        ->select('c.name, c.description, c.image, c.price, AVG(r.rating)-1 as rating, COUNT(r.rating) as rating_count')
        ->leftJoin('c.reviews', 'r')
        ->groupBy('c.id')
        ->orderby('rating', 'DESC')
        ->setMaxResults($limit)
        ->getQuery()->getResult();
    }

    public function findAllRandom($limit) {
        return $this->createQueryBuilder('c')
        ->select('c.id, c.name, c.description, c.image, c.price, AVG(r.rating)-1 as rating, COUNT(r.rating) as rating_count')
        ->leftJoin('c.reviews', 'r')
        ->groupBy('c.id')
        ->setMaxResults($limit)
        ->getQuery()->getResult();
    }

    public function findAllOrderByRatingAndLevel($limit, $level) {
        return $this->createQueryBuilder('c')
        ->select('c.id, c.name, c.description, c.image, c.price, AVG(r.rating)-1 as rating, COUNT(r.rating) as rating_count')
        ->andWhere('c.level = :level')
        ->setParameter('level', $level)
        ->leftJoin('c.reviews', 'r')
        ->groupBy('c.id')
        ->orderby('rating', 'DESC')
        ->setMaxResults($limit)
        ->getQuery()->getResult();
    }

    public function findAllContains($keywords) {
        $q = $this->createQueryBuilder('c')
        ->select('c');

        foreach(explode(" ", $keywords) as $v) {
            $q->orWhere($q->expr()->like('c.name', ':'.$v))
            ->setParameter($v,'%'.$v.'%')
            ->orWhere($q->expr()->like('c.description', ':'.$v))
            ->setParameter($v,'%'.$v.'%');
        }

        return $q
        ->orderby('c.name', 'ASC')
        ->getQuery()->getResult();
    }
}
